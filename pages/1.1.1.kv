#:kivy 2.1.0

#:set prev_file '1.1'
#:set this_file '1.1.1'
#:set this_cap_sec  cap1_sec1
#:set next_file '1.1.2'

#:set page '0' if len(this_file.split('.')) <= 2 else this_file.split('.')[2]
#:set prev_symbol ' ' if not prev_file else '<--'
#:set next_symbol ' ' if not next_file else '-->'

#:set f 0.7

RootWidget:
    # import container
    container: container

    # fill the container
    BoxLayout:
        id: container
        orientation: 'vertical'
        padding: 0
        spacing: 3

        # fill the canvas
        GridLayout:
            rows: 2
            orientation: 'bt-rl' # Slider needs to be specified first, but display order can be changed

            BoxLayout:
                size_hint: (0.075, 0.075)  # Buttom-left
            BoxLayout:
                size_hint: (0.075, 0.925)  # Top-left
                Slider:
                    id: hm
                    min: 0
                    max: 1
                    value: 1
                    orientation: 'vertical'
            BoxLayout:
                size_hint: (0.925, 0.075)  # Buttom-right
                Label:
                    size_hint: (0.2, None)  # To leave 20% free to the left
                Slider:
                    id: wm
                    min: 0
                    max: 1
                    orientation: 'horizontal'
                Label:
                    size_hint: (0.2, None)  # To leave 20% free to the right
            BoxLayout:
                size_hint: (0.925, 0.925)  # Top-right
                canvas:
                    Line:
                        points: root.width/8*(1+wm.value*5), root.height*10/16, root.width*13/16, root.height*14/16
                        #root.width/2 - root.width*wm.value, root.height*3/4 - min(root.width,root.height/3)*f*wm.value/2, 500, 500
                        #pos: root.width/2 - min(root.width,root.height/2)*f*wm.value/2, root.height*3/4 - min(root.width,root.height/2)*f*wm.value/2
                        #size: min(root.width,root.height/2)*f*wm.value, min(root.width,root.height/2)*f*wm.value
                    Line:
                        points: root.width/8, root.height*(11+hm.value*4)/16, root.width*7/8, root.height*11/16
                    Ellipse:
                        pos: (root.width/8)*(28.5+45*wm.value+7*hm.value*(11+10*wm.value))/(12+hm.value*(11+10*wm.value))-5, 500
                        size: 10,10

                    #x = (root.width/8)*(28.5-45*wm.value+7*hm.value(11-10*wm.value))/(12+hm.value*(11-10*wm.value))
                    #y = (-1*root.height*hm.value/(3*root.width))*(((root.width/8)*(28.5-45*wm.value+7*hm.value*(11-10*wm.value))/(12+hm.value*(11-10*wm.value))-5) -root.width/8) +h*(11+4*hm.value)/16
                Label:
                    text_size: self.size
                    halign: 'center'
                    valign: 'top'
                    #text: 'Tamaño = {}'.format(wm.value if wm.value != 0 else f"{wm.value}\n Esto es un punto")


        RstDocument:
            canvas.before:
                Color:
                    rgba: amarillo
                Rectangle:
                    pos: self.pos
                    size: self.size
            source: rst_files_folder + this_file + ".rst"

        # Footer
        BoxLayout:
            orientation: 'horizontal'
            padding: 0
            spacing: 1
            size_hint_y: None
            height: footer_height
            canvas.before:
                Color:
                    rgba: azul
                Rectangle:
                    pos: self.pos
                    size: self.size
            Label:
                text: this_cap_sec + ' - pág. ' + page
            Button:
                size_hint_x: None
                width: self.height
                text: prev_symbol
                on_release: app.next_screen(prev_file)
            Button:
                size_hint_x: None
                width: self.height
                text: next_symbol
                on_release: app.next_screen(next_file)
